/* NEW Text Viewer */

#text-pane-template { 
    display: none;
}

.vue-templates {
    display: none; // Is this doing anything?
}

// TEXT VIEWER

// Layout for text viewer is done with custom flexbox styles.
// TODO: we should use Foundation flexbox instead. But without enabling the flex
// grid. Only the foundation flex helper classes.

.body-text-viewer {
    // Content should fit the viewport, always.
    // So hide the scrollbars. Without this the JS height calculations may fail.
    overflow: hidden;
}

.text-viewer-header {
    h1 {
        font-size: rem-calc(20);
        line-height: 1.25;
        margin: rem-calc(12 0 0 0);
    }
}

.text-viewer {
    display: flex;
    flex-wrap: wrap;
}

.main {

    .boxed {
        background: $light-gray;
        border-radius: rem-calc(4);
        &:first-child {
            margin-bottom: rem-calc(8);
        }
    }

    .close-panel-button {
        background: $light-gray;
        border: 3px solid scale-color($dark-gray, $lightness: 50%);
        border-radius: 50%;
        color: $dark-gray;
        height: rem-calc(28);
        margin-right: rem-calc(16);
        text-align: center;
        text-decoration: none;
        width: rem-calc(28);

        .has-tip {
            border: 0;
        }
    }

    .controls {
        background: scale-color($dark-gray, $lightness: 50%);
        border-radius: rem-calc(4);
        margin-top: rem-calc(12);
        padding: rem-calc(8);

        a {
            padding: rem-calc(8);

            &:hover {
                border-radius: rem-calc(4);
            }
        }

        h2.ms-title {
            font-size: rem-calc(18);
            margin: 0;
            padding: 0;
        }
    }

    .key,
    .toolbar {

        ul {
            list-style: none;
            margin: 0;

            &.menu {
                background: $light-gray;
                padding: rem-calc(24 16 16);
            }

            li {
                border-bottom: none;

                a {
                    border-bottom: 1px solid scale-color($primary-color, $lightness: 70%);
                    color: $primary-color;
                    padding: rem-calc(8 0);

                    &:before {
                        content: "\f070";
                        font-family: "FontAwesome";
                        padding-right: rem-calc(4);
                    }

                    &:visited {
                        background: transparent;
                    }
                }

                &.active {
                    a {
                        background: transparent;

                        &:hover {
                            background: $primary-color;
                        }
                    }

                    a:before {
                        content: "\f06e";
                        font-family: "FontAwesome";
                        padding-right: rem-calc(4);
                    }
                }
            }

            li li {
                border-bottom: 1px solid scale-color($primary-color, $lightness: 70%);
                list-style: none;
                margin: 0;
                padding: rem-calc(8 0);
            }
        }
    }

    /* GN: quick workaround for the narrow sticky bar.
        Foundation 'Sticky' changes position from 'relative' to 'fixed'
        and messes up with the inherited box model properties.
    */

    .column.sticky-container,
    .columns.sticky-container {
        .sticky {
            width: 100%;
        }
    }

    .toolbar {
        /* height: 100vh; */
    }

    /* GN: temporary, any active item in any dropdown should have a primary 
    color background. TODO: change to correct sass variable. 
    */

    ul.menu li.active > a,
    ul.menu li > a:focus {
        background-color: #5871a4;
    }

    ul.menu li.disabled > a {
        background-color: lightgrey;
        color: grey;
        cursor: not-allowed;
    }

    .scrollable ul {
        max-height: 15em;
        overflow-y: auto;
        margin-top: 2.4rem;
    }

    .is-active {

        .list-filter {
            display: block;
            z-index: 1;

            input {
                display: inline;
            }

            input::-webkit-input-placeholder { /* Chrome/Opera/Safari */
                color: $black;
            }

            input::-moz-placeholder { /* Firefox 19+ */
                color: $black;
            }

            input::-ms-input-placeholder { /* IE 10+ */
                color: $black;
            }

            input:-moz-placeholder { /* Firefox 18- */
                color: $black;
            }
        }
    }

    .list-filter {
        display: none;
        min-height: rem-calc(40);
        min-width: rem-calc(200);
        position: absolute;
        
        .clear-filter {
            color: grey;
            line-height: 2.25rem;
            position: absolute;
            right: 0;
            top: 0;
            margin: 0 0.4rem;
            &:hover {
                color: grey;
            }
        }
    }

    /* */

    .pane-sidebar {
        background: $light-gray;

        // GN: fixed-width is more consistent than
        // relying on foundation columns width
        // for the sidebar.
        width: 3rem;
        position: absolute;
        right: 0;
        
        // height: calc(100vh - 400px);
        // max-height: rem-calc(800);
        // position: relative;

        a {
            border: 0;
            padding: rem-calc(16 8);
            padding-right: rem-calc(8) !important;

            &:active,
            &:focus,
            &:visited {
                color: $primary-color;
            }

            &:hover {
                color: $white;
            }
        }

        &.menu > li > a i {
            margin-right: 0;
        }

        .key {
            background: $dark-gray;
            bottom: 0;
            position: absolute;
            width: 100%;

            a {
                color: $white;                
            }

            &.is-dropdown-submenu-parent {                
                .menu {
                    position: absolute;
                    bottom: 0;
                    top: auto !important;
                }
            }
        }
    }

    .pane-sidebar.dropdown.menu.vertical > li.is-dropdown-submenu-parent > a::after {
        border: none;
    }
}

// TEXT PANE
.main .text-pane {
    flex-basis: 0;
    flex-grow: 1;
    margin: rem-calc(5) auto;
    max-width: rem-calc(1440);
    
    .hidden {
        display: none;
    }
}

.pane-content-wrapper {
    margin-top: rem-calc(12);
    
    .pane-content {
        position: relative;
    }
}

.text-chunk {
    // GN: move to .pane-content-wrapper so text block and side bar are aligned
    // margin-top: rem-calc(12);
    // max-height: calc(100vh - 250px);
    overflow-y: scroll;
    
    // GN: fixed space allowance for the sidebar
    margin-right: 4rem;

    div[data-corresp]:hover {
        /* 
        cursor: pointer; 
        text-decoration-color: scale-color($primary-color, $lightness: 50%);
        */
    }

    &.hide-notes .note {
        display: none;
    }

    &.hide-sics .tei-corr-popup {
        display: none;
    }
}

/* Legacy Text Viewer */

.cursor-pointer {
    cursor: pointer;
}

.highlight {
    background-color: #ece4b7;
}

.underline {
    // text-decoration: underline;
    text-decoration-color: scale-color($primary-color, $lightness: 50%);
}

#text-viewer-glass {
    display: none;
    position: absolute;
    background: white;
    opacity: 0.5;
    cursor: wait;
    width: 100%;
    height: 100%;
    z-index: 10;
}


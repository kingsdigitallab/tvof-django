@import 'settings';

/* Text Visualisations Aligment Styles */

.alignment-paras {
    border-spacing: 0px;

    td,
    th {
        border: 0px;
        border-bottom: 1px solid grey;
        border-left: 1px solid grey;
    }

    thead {
        tr {
            background-color: white;
        }
    }

    label {
        font-weight: bold;
        display: inline;
    }
}

.fixed-tr {
    display: none;
    position: absolute;
    z-index: 1;
}

.para-ms-absent {
    background-color: darkgrey;
}

.para-ms-verse {
    background-color: lightblue;
}

/* GN */
.rubric-dest {
    display: block;
    font-style: italic;
}

/* Botched attempt at making a modifier to the rubric
add: a small plus on top of the rubric icon
move: a > on top the rubric icon*/
.rubric-diff:after {
    content: '?';
    position: relative;
    top: -0.2rem;
    right: 0.2rem;
    font-weight: bolder;
    font-size: x-large;
}
.rubric-diff-add:after {
    content: '+';
}
.rubric-diff-move:after {
    content: '>';
    font-size: larger;
}

[data-plink] {
    position: relative;
}

#plink {
    position: absolute; 
    top: 0; 
    right: 0; 
    display: none;
    padding: 0.3em;

    &:hover {
        color: scale-color($primary-color, $lightness: 80%);
        background: scale-color($primary-color, $lightness: 20%);
    }
}

/* Settings modal */

.option-selected {
    background: #f0f0e0;
}

#settings {
    /* make the settings body div scrollable */
    flex-direction: column;
    height: 90vh;

    position: fixed;
    left: 5vw;
    top: 2em;
    width: 90vw;
    z-index: 10000;
    
    display: none;

    background-color: white;
    border: 1px solid grey;
    box-shadow: .5em .5em .4em #202020;
    padding: 0;
}

#settings > div {
    padding: .5em;
}

body {

    &.settings-visible {
        /* html body no longer scrollable when settings model is open*/
        overflow: hidden;    

        #settings {
            display: flex;
        } 
    }
}

.settings-body {
    /* make the settings body div scrollable */
    flex-grow: 1;
    overflow-y: auto;

    input[type=checkbox],
    input[type=radio] {
        margin-bottom: 0;
        margin-left: 0.3em;
        margin-right: 0.1em;
    }

    label {
        line-height: 1em;
        margin: 2px;
        padding: 0.3em;

        &:hover {
            background: #e0e0d0;
        }
    }

    label,
    li {
        /* inline-block to prevent line break between checkboxk and label text */
        display: inline-block;
    }

    ul {
        margin-left: 0;
    }

    .var-actions {
        font-size: small;

        a {
            &:hover {
                text-decoration: underline;
            }
        }
    }
}

.settings-head {
    background-color: #1c2434;
    color: white;
}

/* bars view */

.canvas-bars {
    border: 0;
    height: 80vh;
    width: 96vw;
}

#vis-info-box {
    position: fixed; 
    display: none;
    background: white; 
    border: 2px solid green; 
    color: #101010;
    padding: 0.5em;
    opacity: 0.8;
    box-shadow: 10px 10px 5px #404040;
}

/* Viztest specific */

// Viz Colours
$viz-primary-color: #1c2434;
$viz-secondary-color: #4e2626;
$viz-tertiary-color: #4b4d25;

$viz-neutral: #c7cb00;

$viz-grey: #d8d8d8;


.viz {
    margin: 0;
    padding: 0;
    width: 100%;
    
    /* Variables */

    @function str-replace($string, $search, $replace: '') {
        $index: str-index($string, $search);
        
        @if $index {
          @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
        }
        
        @return $string;
    }
    
    @mixin viz-class-color($class, $color, $darkenpc: 20%) {
        .#{$class} {
            // background: $color;
            @include viz-shared-color($class, $color);

            &:hover,
            &.active {
                @include viz-shared-color(#{$class}-active, darken($color, $darkenpc));
            }
        }
    }

    @mixin viz-shared-color($class, $color, $property: background) {

        #{$property}: $color;

        // Declare that variable in html:root so it can be shared with
        // visualisations written in JS only (e.g. canvas).
        // e.g. 
        // --viz-variation-location-rubric-active: #685289;
        @at-root html {
            --viz-#{str-replace($class, ".", "-")}: $color;
        }
    }

    @include viz-class-color("absent-0", $viz-neutral);
    @include viz-class-color("absent-0-alt", darken($viz-neutral, 5%));

    @include viz-class-color("absent-1", $viz-secondary-color, 10%);

    @include viz-class-color("absent-2", $viz-tertiary-color, 10%);

    @include viz-class-color("absent-3", white, 10%);

    @include viz-class-color("nopara", darken($viz-grey, 20%));

    // Combinations

    // TODO: GN/GF - conditions won't always match partners requirements
    // they want colors for ML & PML
    // In practice ML won't have a location and PML won't have a rubric
    // but it might be bext to directly test the ML and PML 
    @include viz-class-color("variation", #d86d0f);
    @include viz-class-color("variation.location", #dd614a);
    @include viz-class-color("variation.location.rubric", #9c89b8);

    @include viz-class-color("para-ms-verse", #6fbad3);

    // GN: used only on the bars viz so far, correspond to the color of the 
    // rubir stacks / layers
    // Respectively: normal rubric, displaced and additional
    @include viz-class-color("stack-rubric-undefined", #ffb0b0);
    @include viz-class-color("stack-rubric-move", #fe8080);
    @include viz-class-color("stack-rubric-add", #ee4040);

    // Fonts
    $body-font-family: 'Archivo Narrow', sans-serif;

    .column,
    .column-block {
        line-height: 1.6;
        margin: 0;
    }

    .column {
        border-bottom: 2px solid #f2f2f2;
        border-left: 5px solid #f2f2f2;
        border-right: 5px solid #f2f2f2;

        &.first {
            border-top: 2px solid $viz-grey;
        }

        svg {
            padding-left: 5px;
            padding-right: 5px;
        }
    }

    .connect {
        color: white;
        margin-bottom: 0;

        &:hover {
            cursor: pointer;
        }
    }

    .fixed {
        background: white;
        display: block;
        position: fixed;
        width: 100%;
        z-index: 2;
    }

    .hide {
        display: none;
    }

    .section {
        background: #cff0ff;
        border-bottom: 3px solid $viz-neutral;
        font-size: 18px;
        margin: 0;
        padding-left: 15px;
    }

    .show {
        display: block;
    }

    .thead {
        .column {
            border: 0;
        }
    }

    .title {
        background: $viz-primary-color;
        color: white;
        font-size: 18px;
        margin: 0;
        padding: 10px;
    }

    .top-margin {
        height: 50px;
    }

    .zoom {
        transform: scale(2);
    }

    /* Headings */

    h1, h2, h3, h4, h5, h6 {
        font-weight: normal;
    }

    
    // table vizualisation
    
    &.viz-table {
    
        .para-ms, label {
            color: #252525;
        }

        .para-ms {
            &:hover, &:active {
                color: white;
                label {
                    color: white;
                }
            }
        }
    }

}

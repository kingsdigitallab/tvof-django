version: "3"

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.3
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      nginx:
        condition: service_started

  nginx:
    build:
      context: ..
      dockerfile: ./compose/nginx/Dockerfile
    image: tvof-nginx
    environment:
      VIRTUAL_PATH: "~^/(media|static)/"
      VIRTUAL_PORT: 8001
    env_file:
      - ../.envs/.shared
    volumes:
      - ../static:/usr/share/nginx/static:ro
      - ../media:/usr/share/nginx/media:ro
    ports:
      - "8001:8001"
    depends_on:
      django:
        condition: service_started
    restart: unless-stopped

  django:
    build:
      context: ..
      dockerfile: ./compose/django/Dockerfile
    image: tvof-django
    environment:
      VIRTUAL_PATH: "/"
      VIRTUAL_PORT: 8000
    command:
      [
        "/usr/local/bin/gunicorn",
        "config.wsgi",
        "--bind",
        "0.0.0.0:8000",
        "--chdir=/app",
        "--timeout",
        "180",
        "--forwarded-allow-ips='*'",
      ]
    env_file:
      - ../.envs/.shared
      - ../.envs/.django
      - ../.envs/.postgres
    volumes:
      - ../:/app
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  db:
    build:
      context: ..
      dockerfile: ./compose/postgres/Dockerfile
    image: tvof-db
    volumes:
      - ../volumes/local_postgres_data:/var/lib/postgresql/data
      - ../volumes/local_postgres_data_backups:/backups
    env_file:
      - ../.envs/.postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "django", "-U", "django_app"]
      interval: 1s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  elasticsearch:
    # image: elasticsearch:7.10.1
    # GN: reduced to 5 to match python ES package
    image: elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
       test: curl -s -f http://localhost:9200 > /dev/null || exit 1
       interval: 5s
       timeout: 3s
       retries: 10
    restart: unless-stopped
#
#  redis:
#    image: redis:5.0
#    restart: unless-stopped

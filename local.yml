version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: tvof_local_django
    container_name: django
    depends_on:
      - postgres
      - elasticsearch
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start
    restart: unless-stopped

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: tvof_local_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres
    restart: unless-stopped

#  docs:
#    image: tvof_local_docs
#    container_name: docs
#    build:
#      context: .
#      dockerfile: ./compose/local/docs/Dockerfile
#    env_file:
#      - ./.envs/.local/.django
#    volumes:
#      - ./docs:/docs:z
#      - ./config:/app/config:z
#      - ./tvof:/app/tvof:z
#    ports:
#      - "7000:7000"

  elasticsearch:
    image: elasticsearch:7.9.1
    env_file:
      - ./.envs/.local/.elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    restart: unless-stopped

#  kibana:
#    image: kibana:7.9.1
#    depends_on:
#      - elasticsearch
#    env_file:
#      - ./.envs/.local/.kibana
#    ports:
#      - '5601:5601'
#    restart: unless-stopped
